syntax = "proto3";

package auth;

option go_package = "/auth-proto";

message AuthValidateToken{
    string token = 1;
}

message AuthValidateTokenRequest {
    AuthValidateToken authValidateTokenEntry = 1;
}

message AuthValidateResponse {
    bool success = 1;
    string result = 2;
}

message AuthSignup{
    string name = 1;
    string email = 2;
    string password = 3;
    string cpf = 4;
    string cnpj = 5;
    string userType = 6;
}

message AuthSignupRequest {
    AuthSignup authSignup = 1;
}

message AuthSignupData {
    string token = 1;
    string refresh_token = 2;
}

message AuthSignupResponse {
    bool error = 1;
    string message = 2;
    AuthSignupData data = 3;
}

message AuthLogin{
    string email = 1;
    string password = 2;
}

message AuthLoginRequest{
    AuthLogin authLogin = 1;
}

message AuthLoginResponse{
    bool error = 1;
    string message = 2;
    AuthSignupData data = 3;
}

message AuthRefresh{
    string token = 1;
    string refresh_token = 2;
}

message AuthRefreshRequest{
    AuthRefresh authRefresh = 1;
}

message AuthRefreshResponse{
    bool error = 1;
    string message = 2;
    AuthSignupData data = 3;
}

message AuthUpdateUser{
    string name = 1;
    int32 user_id = 2;
}

message AuthUpdateUserRequest{
    AuthUpdateUser authUpdateUser = 1;
}

message AuthUpdateUserResponse{
    bool error = 1;
    string message = 2;
    AuthSignupData data = 3;
}

service AuthService {
    rpc ValidateToken(AuthValidateTokenRequest) returns (AuthValidateResponse);
    rpc Signup(AuthSignupRequest) returns (AuthSignupResponse);
    rpc Login(AuthLoginRequest) returns (AuthLoginResponse);
    rpc Refresh(AuthRefreshRequest) returns (AuthRefreshResponse);
    rpc UpdateUser(AuthUpdateUserRequest) returns (AuthUpdateUserResponse);
}